FROM nexus3.onap.org:10001/onap/integration-python:12.0.0
# https://nexus3.onap.org/#browse/search=keyword%3Dintegration-python:d406d405e4cfbf1186265b01088caf9a
# https://git.onap.org/integration/docker/onap-python/tree/Dockerfile

USER root

ARG user=orano2
ARG group=orano2

# Create a group and user
RUN addgroup -S $group && adduser -S -D -h /home/$user $user $group && \
    chown -R $user:$group /home/$user &&  \
    mkdir /var/log/$user && \
    mkdir -p /src && \
    mkdir -p /configs/ && \
    mkdir -p /src/o2app/ && \
    mkdir -p /src/helm_sdk/ && \
    mkdir -p /etc/o2/ && \
    chown -R $user:$group /var/log/$user && \
    chown -R $user:$group /src && \
    chown -R $user:$group /configs && \
    chown -R $user:$group /etc/o2/

COPY requirements.txt requirements-test.txt requirements-stx.txt constraints.txt /tmp/

# in case git repo is not accessable
RUN mkdir -p /cgtsclient && mkdir -p /distcloud-client
COPY temp/config /cgtsclient/
COPY temp/distcloud-client /distcloud-client/
COPY temp/fault /faultclient/

COPY o2ims/ /src/o2ims/
COPY o2dms/ /src/o2dms/
COPY o2common/ /src/o2common/
COPY o2app/ /src/o2app/
COPY setup.py /src/

COPY helm_sdk/ /src/helm_sdk/

COPY configs/ /etc/o2/
COPY configs/ /configs/

# First install base packages from stable repository
RUN apk add --no-cache \
    git \
    curl \
    bluez-dev \
    bzip2-dev \
    dpkg-dev dpkg \
    gcc \
    libc-dev \
    libffi-dev \
    libnsl-dev \
    libtirpc-dev \
    linux-headers \
    make \
    openssl-dev \
    pax-utils \
    sqlite-dev \
    tcl-dev \
    tk \
    tk-dev \
    util-linux-dev \
    xz-dev \
    zlib-dev

# Then add edge main repository and install dependencies
RUN echo "https://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories && \
    apk update && \
    # Install ncurses packages first from edge repository
    apk add --no-cache --repository https://dl-cdn.alpinelinux.org/alpine/edge/main \
        ncurses-dev \
        ncurses-terminfo-base \
        ncurses-libs && \
    # Install other build dependencies
    apk add --no-cache --repository https://dl-cdn.alpinelinux.org/alpine/edge/main \
        python3-dev \
        gcc \
        musl-dev \
        libffi-dev \
        openssl-dev \
        bzip2-dev \
        zlib-dev \
        readline-dev \
        sqlite-dev \
        tcl-dev \
        tk-dev \
        make \
        linux-headers && \
    # Install expat and fontconfig-dev
    apk add --no-cache --repository https://dl-cdn.alpinelinux.org/alpine/edge/main expat=2.7.0-r0 expat-dev=2.7.0-r0 fontconfig-dev && \
    # Download and build Python from source
    cd /tmp && \
    curl -O https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tgz && \
    tar xzf Python-3.12.2.tgz && \
    cd Python-3.12.2 && \
    ./configure --with-system-expat --without-readline && \
    make && \
    make install && \
    cd /tmp && \
    rm -rf Python-3.12.2 Python-3.12.2.tgz && \
    # Clean up build dependencies
    apk del --no-cache \
        python3-dev \
        gcc \
        musl-dev \
        libffi-dev \
        openssl-dev \
        bzip2-dev \
        zlib-dev \
        readline-dev \
        sqlite-dev \
        tcl-dev \
        tk-dev \
        make \
        linux-headers

RUN set -ex \
    && echo "https://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories && \
    apk update && \
    apk add --no-cache bash && \
    apk add --no-cache --repository https://dl-cdn.alpinelinux.org/alpine/edge/main expat=2.7.0-r0 && \
    apk add --no-cache --virtual .fetch2-deps && \
    pip install -r /tmp/requirements.txt -c /tmp/constraints.txt && \
    pip install -r /tmp/requirements-test.txt && \
    pip install -e /cgtsclient/sysinv/cgts-client/cgts-client/ && \
    pip install -e /distcloud-client/distributedcloud-client && \
    pip install -e /faultclient/python-fmclient/fmclient/ && \
    pip install -e /src && \
    apk del --no-network .fetch2-deps

COPY tests/ /tests/

RUN mkdir -p /etc/kubeconfig/
# COPY temp/kubeconfig/config /etc/kubeconfig/

RUN mkdir -p /var/log/orano2

WORKDIR /src

# USER $user
ENV PYTHONHASHSEED=0
